/**
 * Represents the JSON body of the POST request from the frontend to create a wallet.
 * This should match the `WalletData.kt` model from the Android app.
 */
export interface WalletPayload {
  id: string; // This is the client-generated UUID for the wallet.
  name: string;
  type: string;
  balance: number;
  colorHex: string;
  iconName: string;
  // userEmail might be sent but should not be used for auth; use user_id from token.
}

/**
 * Represents the data structure passed to the database INSERT operation.
 * It maps the frontend payload to the correct database columns.
 * `id` (primary key, bigint) is excluded because it's auto-generated by the database.
 */
export interface WalletInsert {
  wallet_id: string; // Mapped from `id` in the WalletPayload. The database column should be 'wallet_id'.
  user_id: string;   // The authenticated user's ID from the request token.
  name: string;
  type: string;
  balance: number;
  color_hex: string; // Assumes the database column is snake_case.
  icon_name: string; // Assumes the database column is snake_case.
}

/**
 * Represents the full Wallet object as it exists in the database.
 * This is what should be returned from SELECT queries.
 */
export interface WalletType {
  id: number;        // The auto-incrementing primary key (bigint).
  wallet_id: string; // The client-generated UUID.
  user_id: string;
  name: string;
  type: string;
  balance: number;
  color_hex: string;
  icon_name: string;
  created_at: string; // ISO date string
  updated_at: string; // ISO date string
}